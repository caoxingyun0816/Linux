Linux 环境搭建
1.安装java
https://www.cnblogs.com/alwayswyy/p/5212471.html

2.mysql 安装
https://blog.csdn.net/z13615480737/article/details/78906598
 cd /usr/local/src/
  wget http://repo.mysql.com/mysql57-community-release-el7-8.noarch.rpm 
  rpm -ivh mysql57-community-release-el7-8.noarch.rpm 
  yum -y install mysql-server 
  配置文件：/etc/my.cnf 
日志文件：/var/log/var/log/mysqld.log 
服务启动脚本：/usr/lib/systemd/system/mysqld.service 
socket文件：/var/run/mysqld/mysqld.pid

启动mysql服务

service mysqld restart

 重置密码

grep "password" /var/log/mysqld.log   

输入 mysql -u root -p   密码 进入  

修改密码
alter user 'root'@'localhost' identified by 'Root!!2018';   

最后记得刷新权限；

flush privileges 

也可以 直接再添加新用户     

CREATE USER ‘root‘@‘%‘ IDENTIFIED BY ‘您的密码‘;
grant all on *.* to 'root001'@'%' identified by 'Root@@'  with grant option;

增加root用户指定可以任意IP登录，如果想限制只能让指定IP登录请把%替换成IP地址

3.安装 wget lrzsz
 yum -y install wget
 yum -y install lrzsz

4.部署springboot项目
注意pom文件中加入打包插件
 <build>
        <plugins>
            <!--该插件是用来项目打包得，将项目引用的其他的jar都打入到jar中，使打出的jar包是可执行的服务-->
            <!--打包后就可以将jar上传到服务器上然后用java命令执行 java -jar a.jar-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.1.3.RELEASE</version>
                <executions>
                    <execution>
                        <goals>
                            <!--重新打包-->
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <!--打包的最终名称-->
        <finalName>demo</finalName>
</build>

5.用lrzsz上传文件
rz -y 选择文件
记得在shell终端中操作。
例如CRT

6.java -jar 启动
启动springboot项目
#!/bin/sh
jps | grep purchase-service
while [ $? -eq 0 ]
do
 kill `jps | grep purchase-service | awk '{print $1}'`
 sleep 2
 jps | grep purchase-service
done
sleep 5
 nohup java -Dspring.profiles.active=test -Dspring.profiles.url=http://192.168.1.132:1001 -DlogPath=/usr/project/ecmoho-purchase-service/log/ -DdefaultLevel=info -DlogstashUrl=udp:192.168.1.132  -jar /usr/project/ecmoho-purchase-service
/target/ecmoho-purchase-service-1.0.0.jar > /usr/project/ecmoho-purchase-service/sysetm_log.log 2>&1 &
echo "Finished"

nohup
nohup 不挂断运行的命令，当终端关闭或CTRL+C的时候，程序依旧运行
java -jar 方式运行springboot项目
前台启动
java -jar XXX.jar

指定启动内存大小
java -Xms1024m -Xmx1024m -Xmn1024m -server -jar boot.jar

后台启动
java -jar xxx.jar &
区别:前台启动ctrl+c就会关闭程序,后台启动ctrl+c不会关闭程序
制定控制台的标准输出
java -jar xxx.jar > catalina.out  2>&1 & 
 
catalina.out将标准输出指向制定文件catalina.out
2>&1 输出所有的日志文件
& 后台启动


#!/bin/sh
jps | grep product-service
while [ $? -eq 0 ]
do
 kill `jps | grep product-service | awk '{print $1}'`
 sleep 5
 jps | grep product-service
done
sleep 8
 nohup java -Dspring.profiles.active=test -Dspring.profiles.url=http://192.168.1.132:1001 -DlogPath=/usr/project/ecmoho-product-service/log/ -DdefaultLevel=info -DlogstashUrl=udp:192.168.1.132  -jar /usr/project/ecmoho-product-service/target/ecmoho-product-service-1.0.0.jar > /usr/project/ecmoho-product-service/sysetm_log.log 2>&1 &
echo "Finished"